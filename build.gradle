plugins {
    id "java"
    id "org.embulk.embulk-plugins" version "0.7.0"
    id "com.palantir.git-version" version "3.1.0"
    id "com.diffplug.spotless" version "6.13.0" // Downgrade to match Java 8
}

repositories {
    mavenCentral()
}

group = "t3t5u"
version = {
    def vd = versionDetails()
    if (vd.commitDistance == 0 && vd.lastTag ==~ /^[0-9]+\.[0-9]+\.[0-9]+([.-][.a-zA-Z0-9-]+)?$/) {
        vd.lastTag
    } else {
        "0.0.0.${vd.gitHash}"
    }
}()
description = "Example."

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

configurations {
    compileClasspath.resolutionStrategy.activateDependencyLocking()
    runtimeClasspath.resolutionStrategy.activateDependencyLocking()
}

dependencies {
    compileOnly "org.embulk:embulk-spi:0.11"

    implementation "org.embulk:embulk-base-restclient:0.10.1"
    implementation "org.embulk:embulk-util-aws-credentials:0.4.2"
    implementation "org.embulk:embulk-util-config:0.5.0"
    implementation "org.embulk:embulk-util-csv:0.3.0"
    implementation "org.embulk:embulk-util-dynamic:0.2.1"
    implementation "org.embulk:embulk-util-file:0.2.0"
    implementation "org.embulk:embulk-util-guess:0.4.0"
    implementation "org.embulk:embulk-util-json:0.5.0"
    implementation "org.embulk:embulk-util-msgpack:0.8.24.1"
    implementation "org.embulk:embulk-util-retryhelper:0.9.0"
    implementation "org.embulk:embulk-util-retryhelper-jaxrs:0.9.0"
    implementation "org.embulk:embulk-util-retryhelper-jetty92:0.9.0"
    implementation "org.embulk:embulk-util-retryhelper-jetty93:0.9.0"
    implementation "org.embulk:embulk-util-retryhelper-jetty94:0.9.0"
    implementation "org.embulk:embulk-util-rubytime:0.4.0"
    implementation "org.embulk:embulk-util-snakeyaml:0.1.0"
    implementation "org.embulk:embulk-util-ssl:0.3.0"
    implementation "org.embulk:embulk-util-text:0.2.0"
    implementation "org.embulk:embulk-util-timestamp:0.3.0"

    testImplementation "junit:junit:4.13.2"
    testImplementation "org.embulk:embulk-spi:0.11"
    testImplementation "org.embulk:embulk-core:0.11.5"
    testImplementation "org.embulk:embulk-deps:0.11.5"
    testImplementation "org.embulk:embulk-input-file:0.11.1"
    testImplementation "org.embulk:embulk-decoder-bzip2:0.11.1"
    testImplementation "org.embulk:embulk-decoder-gzip:0.11.1"
    testImplementation "org.embulk:embulk-parser-csv:0.11.6"
    testImplementation "org.embulk:embulk-formatter-csv:0.11.2"
    testImplementation "org.embulk:embulk-encoder-bzip2:0.11.1"
    testImplementation "org.embulk:embulk-encoder-gzip:0.11.1"
    testImplementation "org.embulk:embulk-output-file:0.11.1"
    testImplementation "org.embulk:embulk-junit4:0.11.5"
    testImplementation "org.embulk:embulk-api:0.10.43"
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:all" << "-Xlint:-serial"
}

embulkPlugin {
    mainClass = "org.embulk.input.example.ExampleInputPlugin"
    category = "input"
    type = "example"
}

gem {
    authors = [ "Tetsuro Sano" ]
    email = [ "t3t5u.5an0@gmail.com" ]
    summary = "Example input plugin for Embulk"
    homepage = "https://github.com/t3t5u/embulk-input-example"
    licenses = [ "MIT" ]
    from("LICENSE.txt")
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
        formatAnnotations()
        toggleOffOn()
    }
}
